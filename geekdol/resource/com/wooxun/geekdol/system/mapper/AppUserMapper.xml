<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wooxun.geekdol.system.mapper.AppUserMapper" >
  <resultMap id="BaseResultMap" type="com.wooxun.geekdol.system.model.AppUser" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
    <result column="moblie" property="moblie" jdbcType="VARCHAR" />
    <result column="pwd" property="pwd" jdbcType="VARCHAR" />
    <result column="safekey" property="safekey" jdbcType="VARCHAR" />
    <result column="head_portrait" property="headPortrait" jdbcType="VARCHAR" />
    <result column="real_name" property="realName" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="CHAR" />
    <result column="birth_day" property="birthDay" jdbcType="VARCHAR" />
    <result column="certificate_type" property="certificateType" jdbcType="CHAR" />
    <result column="certificate_number" property="certificateNumber" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="staff_flag" property="staffFlag" jdbcType="CHAR" />
    <result column="staff_level" property="staffLevel" jdbcType="CHAR" />
    <result column="staff_source" property="staffSource" jdbcType="CHAR" />
    <result column="push_id" property="pushId" jdbcType="VARCHAR" />
    <result column="ins_id" property="insId" jdbcType="BIGINT" />
    <result column="ins_ymdhms" property="insYmdhms" jdbcType="TIMESTAMP" />
    <result column="upd_id" property="updId" jdbcType="BIGINT" />
    <result column="upd_ymdhms" property="updYmdhms" jdbcType="TIMESTAMP" />
    <result column="upd_eac" property="updEac" jdbcType="BIGINT" />
    <result column="del_flag" property="delFlag" jdbcType="CHAR" />
    <result column="user_code" property="userCode" jdbcType="VARCHAR" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, nick_name, moblie, pwd, safekey, head_portrait, real_name, sex, birth_day, certificate_type, 
    certificate_number, email, address, status, staff_flag, staff_level, staff_source, 
    push_id, ins_id, ins_ymdhms, upd_id, upd_ymdhms, upd_eac, del_flag,user_code,uid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from s_app_user
    where id = #{id,jdbcType=BIGINT} and del_flag = '0'
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from s_app_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.wooxun.geekdol.system.model.AppUser" 
useGeneratedKeys="true" keyProperty="id">
    insert into s_app_user (id, nick_name, moblie, 
      pwd, safekey, head_portrait, 
      real_name, sex, birth_day, 
      certificate_type, certificate_number, email, 
      address, status, staff_flag, 
      staff_level, staff_source, push_id, 
      ins_id, ins_ymdhms, upd_id, 
      upd_ymdhms, upd_eac, del_flag,user_code,uid
      )
    values (#{id,jdbcType=BIGINT}, #{nickName,jdbcType=VARCHAR}, #{moblie,jdbcType=VARCHAR}, 
      #{pwd,jdbcType=VARCHAR}, #{safekey,jdbcType=VARCHAR}, #{headPortrait,jdbcType=VARCHAR}, 
      #{realName,jdbcType=VARCHAR}, #{sex,jdbcType=CHAR}, #{birthDay,jdbcType=VARCHAR}, 
      #{certificateType,jdbcType=CHAR}, #{certificateNumber,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{status,jdbcType=CHAR}, #{staffFlag,jdbcType=CHAR}, 
      #{staffLevel,jdbcType=CHAR}, #{staffSource,jdbcType=CHAR}, #{pushId,jdbcType=VARCHAR}, 
      #{insId,jdbcType=BIGINT}, #{insYmdhms,jdbcType=TIMESTAMP}, #{updId,jdbcType=BIGINT}, 
      #{updYmdhms,jdbcType=TIMESTAMP}, #{updEac,jdbcType=BIGINT}, #{delFlag,jdbcType=CHAR},#{user_code,jdbcType=VARCHAR},#{uid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.wooxun.geekdol.system.model.AppUser" useGeneratedKeys="true" keyProperty="id">
    insert into s_app_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="nickName != null" >
        nick_name,
      </if>
      <if test="moblie != null" >
        moblie,
      </if>
      <if test="pwd != null" >
        pwd,
      </if>
      <if test="safekey != null" >
        safekey,
      </if>
      <if test="headPortrait != null" >
        head_portrait,
      </if>
      <if test="realName != null" >
        real_name,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="birthDay != null" >
        birth_day,
      </if>
      <if test="certificateType != null" >
        certificate_type,
      </if>
      <if test="certificateNumber != null" >
        certificate_number,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="staffFlag != null" >
        staff_flag,
      </if>
      <if test="staffLevel != null" >
        staff_level,
      </if>
      <if test="staffSource != null" >
        staff_source,
      </if>
      <if test="pushId != null" >
        push_id,
      </if>
      <if test="insId != null" >
        ins_id,
      </if>
      <if test="insYmdhms != null" >
        ins_ymdhms,
      </if>
      <if test="updId != null" >
        upd_id,
      </if>
      <if test="updYmdhms != null" >
        upd_ymdhms,
      </if>
      <if test="updEac != null" >
        upd_eac,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
       <if test="userCode != null" >
        user_code,
      </if>
       <if test="uid != null and uid != 0" >
        uid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="nickName != null" >
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="moblie != null" >
        #{moblie,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null" >
        #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="safekey != null" >
        #{safekey,jdbcType=VARCHAR},
      </if>
      <if test="headPortrait != null" >
        #{headPortrait,jdbcType=VARCHAR},
      </if>
      <if test="realName != null" >
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=CHAR},
      </if>
      <if test="birthDay != null" >
        #{birthDay,jdbcType=VARCHAR},
      </if>
      <if test="certificateType != null" >
        #{certificateType,jdbcType=CHAR},
      </if>
      <if test="certificateNumber != null" >
        #{certificateNumber,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="staffFlag != null" >
        #{staffFlag,jdbcType=CHAR},
      </if>
      <if test="staffLevel != null" >
        #{staffLevel,jdbcType=CHAR},
      </if>
      <if test="staffSource != null" >
        #{staffSource,jdbcType=CHAR},
      </if>
      <if test="pushId != null" >
        #{pushId,jdbcType=VARCHAR},
      </if>
      <if test="insId != null" >
        #{insId,jdbcType=BIGINT},
      </if>
      <if test="insYmdhms != null" >
        #{insYmdhms,jdbcType=TIMESTAMP},
      </if>
      <if test="updId != null" >
        #{updId,jdbcType=BIGINT},
      </if>
      <if test="updYmdhms != null" >
        #{updYmdhms,jdbcType=TIMESTAMP},
      </if>
      <if test="updEac != null" >
        #{updEac,jdbcType=BIGINT},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=CHAR},
      </if>
      <if test="userCode != null" >
        #{userCode,jdbcType=VARCHAR},
      </if>
       <if test="uid != null and uid != 0" >
        #{uid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wooxun.geekdol.system.model.AppUser" >
    update s_app_user
    <set >
      <if test="nickName != null and nickName.trim()!=''" >
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="moblie != null and moblie.trim()!=''" >
        moblie = #{moblie,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null and pwd.trim()!=''" >
        pwd = #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="safekey != null and safekey.trim()!=''" >
        safekey = #{safekey,jdbcType=VARCHAR},
      </if>
      <if test="headPortrait != null and headPortrait.trim()!=''" >
        head_portrait = #{headPortrait,jdbcType=VARCHAR},
      </if>
      <if test="realName != null and realName.trim()!=''" >
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null and sex.trim()!=''" >
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="birthDay != null and birthDay.trim()!=''" >
        birth_day = #{birthDay,jdbcType=VARCHAR},
      </if>
      <if test="certificateType != null and certificateType.trim()!=''" >
        certificate_type = #{certificateType,jdbcType=CHAR},
      </if>
      <if test="certificateNumber != null and certificateNumber.trim()!=''" >
        certificate_number = #{certificateNumber,jdbcType=VARCHAR},
      </if>
      <if test="email != null and email.trim()!=''" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="address != null and address.trim()!=''" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="status != null and status.trim()!=''" >
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="staffFlag != null and staffFlag.trim()!=''" >
        staff_flag = #{staffFlag,jdbcType=CHAR},
      </if>
      <if test="staffLevel != null and staffLevel.trim()!=''" >
        staff_level = #{staffLevel,jdbcType=CHAR},
      </if>
      <if test="staffSource != null and staffSource.trim()!=''" >
        staff_source = #{staffSource,jdbcType=CHAR},
      </if>
      <if test="pushId != null and pushId.trim()!=''" >
        push_id = #{pushId,jdbcType=VARCHAR},
      </if>
      <if test="insId != null" >
        ins_id = #{insId,jdbcType=BIGINT},
      </if>
      <if test="insYmdhms != null" >
        ins_ymdhms = #{insYmdhms,jdbcType=TIMESTAMP},
      </if>
      <if test="updId != null" >
        upd_id = #{updId,jdbcType=BIGINT},
      </if>
      <if test="updYmdhms != null" >
        upd_ymdhms = #{updYmdhms,jdbcType=TIMESTAMP},
      </if>
      <if test="updEac != null" >
        upd_eac = #{updEac,jdbcType=BIGINT},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=CHAR},
      </if>
      <if test="userCode != null" >
        user_code = #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="uid != null and uid != 0" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
      and upd_eac =  ( #{updEac,jdbcType=BIGINT} -1) 
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wooxun.geekdol.system.model.AppUser" >
    update s_app_user
    set nick_name = #{nickName,jdbcType=VARCHAR},
      moblie = #{moblie,jdbcType=VARCHAR},
      pwd = #{pwd,jdbcType=VARCHAR},
      safekey = #{safekey,jdbcType=VARCHAR},
      head_portrait = #{headPortrait,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=CHAR},
      birth_day = #{birthDay,jdbcType=VARCHAR},
      certificate_type = #{certificateType,jdbcType=CHAR},
      certificate_number = #{certificateNumber,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      status = #{status,jdbcType=CHAR},
      staff_flag = #{staffFlag,jdbcType=CHAR},
      staff_level = #{staffLevel,jdbcType=CHAR},
      staff_source = #{staffSource,jdbcType=CHAR},
      push_id = #{pushId,jdbcType=VARCHAR},
      ins_id = #{insId,jdbcType=BIGINT},
      ins_ymdhms = #{insYmdhms,jdbcType=TIMESTAMP},
      upd_id = #{updId,jdbcType=BIGINT},
      upd_ymdhms = #{updYmdhms,jdbcType=TIMESTAMP},
      upd_eac = #{updEac,jdbcType=BIGINT},
      del_flag = #{delFlag,jdbcType=CHAR},
      user_code = #{userCode,jdbcType=CHAR},
      uid = #{uid,jdbcType=INTEGER},
      where id = #{id,jdbcType=BIGINT}
      and upd_eac =  ( #{updEac,jdbcType=BIGINT} -1) 
  </update>
  <!-- 内参人员检索begin -->
  <select id="queryAppUser" parameterType="com.wooxun.geekdol.system.vo.AppUserVo" resultType="com.wooxun.geekdol.system.vo.AppUserVo">
  	select d.* from (select a.id as id, a.nick_name as nickName, a.moblie as moblie, a.safekey as safekey, a.head_portrait as headPortrait, 
  		   a.real_name as realName, a.sex as sex, a.birth_day as birthDay, a.certificate_type as certificateType, 
    	   a.certificate_number as certificateNumber, a.email as email, a.address as address, a.status as status, 
    	   a.staff_flag as staffFlag, a.staff_level as staffLevel, a.staff_source as staffSource, a.push_id,
    	   a.certificateTypeName as certificateTypeName,sl.staffLevelName
    from (select 
		    au.*,sd.lable as certificateTypeName  from (select * from s_app_user where del_flag = '0'
		    <if test="realName != null and realName.trim()!=''">
		    	AND real_name LIKE CONCAT(CONCAT('%', #{realName}),'%')
		    </if>
		    <if test="staffLevel != null and staffLevel.trim()!=''">
		    	AND staff_level = #{staffLevel,jdbcType=CHAR}
		    </if>
		    <if test="status != null and status.trim()!=''">
		    	AND status = #{status,jdbcType=CHAR}
		    </if>
		    <if test="moblie != null and moblie.trim()!=''">
		    	AND moblie LIKE CONCAT(CONCAT('%', #{moblie}),'%')
		    </if>
		    <if test="email != null and email.trim()!=''">
		    	AND email LIKE CONCAT(CONCAT('%', #{email}),'%')
		    </if>
		    AND staff_flag='1') au 
			left join s_sys_data sd on au.certificate_type = sd.value 
			<if test="certificateSysType != null and certificateSysType.trim()!=''">
				and sd.type = #{certificateSysType,jdbcType=VARCHAR}
			</if>
		) a 
		left join 
		(select value,lable as staffLevelName from s_sys_data where 
			<if test="staffLevelType != null and staffLevelType.trim()!=''">
				type = #{staffLevelType,jdbcType=VARCHAR} 
			</if>
			and del_flag = '0') sl
		on a.staff_level = sl.value) d
    <if test="pageFlag==true">
		LIMIT #{startPage}, #{endPage}
	</if>
  </select>
  <select id="queryAppUserCount" parameterType="com.wooxun.geekdol.system.vo.AppUserVo" resultType="java.lang.Long">
  		select count(id) from s_app_user
    	WHERE 1=1 and del_flag = '0' AND staff_flag='1'
	    <if test="realName != null and realName.trim()!=''">
	    	AND real_name LIKE CONCAT(CONCAT('%', #{realName}),'%')
	    </if>
	    <if test="staffLevel != null and staffLevel.trim()!=''">
	    	AND staff_level = #{staffLevel,jdbcType=CHAR}
	    </if>
	    <if test="status != null and status.trim()!=''">
	    	AND status = #{status,jdbcType=CHAR}
	    </if>
	    <if test="moblie != null and moblie.trim()!=''">
	    	AND moblie LIKE CONCAT(CONCAT('%', #{moblie}),'%')
	    </if>
	    <if test="email != null and email.trim()!=''">
	    	AND email LIKE CONCAT(CONCAT('%', #{email}),'%')
	    </if>
  </select>
  <!-- 内参人员检索end -->
  <!-- 新增内参人员校验 begin -->
  <select id="hasAppUser" parameterType="com.wooxun.geekdol.system.model.AppUser" resultType="java.lang.Long">
	  select count(id) from s_app_user
	  where moblie = #{moblie,jdbcType=VARCHAR}
	  AND del_flag='0'
  </select>
  <!-- 新增内参人员校验 end -->
  <!-- 内参人员管理：会员转入列表查询 -->
  <select id="queryMemberByParams" parameterType="com.wooxun.geekdol.system.vo.AppUserVo" resultType="com.wooxun.geekdol.system.vo.AppUserVo">
    select a.id as id, a.nick_name as nickName, a.moblie as moblie, a.safekey as safekey, a.head_portrait as headPortrait, 
  		   a.real_name as realName, a.sex as sex, a.birth_day as birthDay, a.certificate_type as certificateType, 
    	   a.certificate_number as certificateNumber, a.email as email, a.address as address, a.status as status, 
    	   a.staff_flag as staffFlag, a.staff_level as staffLevel, a.staff_source as staffSource, a.push_id,
    	   a.certificateTypeName as certificateTypeName
    from (select 
		    au.*,sd.lable as certificateTypeName  from (select * from s_app_user where del_flag = '0'
		    <if test="nickName != null and nickName.trim()!=''">
	            AND nick_name LIKE CONCAT(CONCAT('%', #{nickName}),'%')
	        </if>
	        <if test="moblie != null and moblie.trim()!=''">
	            AND moblie LIKE CONCAT(CONCAT('%', #{moblie}),'%')
	        </if>
	        <if test="email != null and email.trim()!=''">
	            AND email LIKE CONCAT(CONCAT('%', #{email}),'%')
	        </if>
	        <if test="status != null and status.trim()!=''">
            AND status = #{status,jdbcType=CHAR}
        </if>
		    AND staff_flag='0') au 
			left join s_sys_data sd on au.certificate_type = sd.value 
			<if test="certificateSysType != null and certificateSysType.trim()!=''">
				and sd.type = #{certificateSysType,jdbcType=VARCHAR}
			</if>
		) a 
    <if test="pageFlag==true">
		LIMIT #{startPage}, #{endPage}
	</if>
  </select>
  <select id="queryMemberCountByParams" parameterType="com.wooxun.geekdol.system.vo.AppUserVo" resultType="java.lang.Long">
    select count(id) from s_app_user
     <where>
        <if test="nickName != null and nickName.trim()!=''">
            AND nick_name LIKE CONCAT(CONCAT('%', #{nickName}),'%')
        </if>
        <if test="moblie != null and moblie.trim()!=''">
            AND moblie LIKE CONCAT(CONCAT('%', #{moblie}),'%')
        </if>
        <if test="email != null and email.trim()!=''">
            AND email LIKE CONCAT(CONCAT('%', #{email}),'%')
        </if>
         AND del_flag='0' AND staff_flag='0' AND moblie != ''
      </where>
  </select>
  <!-- 内参人员管理：会员转入列表查询 -->
  
  <!-- 会员管理根据页面查询条件显示列表-->
  <select id="findAll" parameterType="com.wooxun.geekdol.system.vo.AppUserVo" resultType="com.wooxun.geekdol.system.vo.AppUserVo">
    select
     id, nick_name as nickName, moblie,real_name as realName, 
     email, address, status
    from s_app_user
     <where>
        <if test="nickName != null and nickName.trim()!=''">
            AND nick_name LIKE CONCAT(CONCAT('%', #{nickName}),'%')
        </if>
        <if test="status != null and status.trim()!=''">
            AND status = #{status,jdbcType=CHAR}
        </if>
        <if test="moblie != null and moblie.trim()!=''">
            AND moblie LIKE CONCAT(CONCAT('%', #{moblie}),'%')
        </if>
        <if test="email != null and email.trim()!=''">
            AND email LIKE CONCAT(CONCAT('%', #{email}),'%')
        </if>
         AND del_flag='0'
         AND moblie != ''
      </where>
      order by ins_ymdhms DESC
      <if test="pageFlag==true">
        LIMIT #{startPage}, #{endPage}
      </if>
  </select>
  
  <!-- 会员管理根据页面查询条件显示列表分页计数 -->
  <select id="findAllCount" resultType="java.lang.Long" parameterType="com.wooxun.geekdol.system.vo.AppUserVo">
    select count(id) from s_app_user
     <where>
        <if test="nickName != null and nickName.trim()!=''">
            AND nick_name LIKE CONCAT(CONCAT('%', #{nickName}),'%')
        </if>
        <if test="status != null and status.trim()!=''">
            AND status = #{status,jdbcType=CHAR}
        </if>
        <if test="moblie != null and moblie.trim()!=''">
            AND moblie LIKE CONCAT(CONCAT('%', #{moblie}),'%')
        </if>
        <if test="email != null and email.trim()!=''">
            AND email LIKE CONCAT(CONCAT('%', #{email}),'%')
        </if>
         AND del_flag='0'
         AND moblie != ''
      </where>
    </select> 
    
    <!-- 逻辑删除会员信息-->
    <update id="deleteAppUser" parameterType="com.wooxun.geekdol.system.model.AppUser">
     UPDATE 
     s_app_user
     SET
     <if test="updId != null" >
        upd_id = #{updId,jdbcType=BIGINT},
      </if>
      <if test="updYmdhms != null" >
        upd_ymdhms = #{updYmdhms,jdbcType=TIMESTAMP},
      </if>
      <if test="updEac != null" >
        upd_eac = #{updEac,jdbcType=BIGINT},
      </if>
     del_flag='1'
     where
     id = #{id,jdbcType=BIGINT}
     and upd_eac =  ( #{updEac,jdbcType=BIGINT} -1) 
    </update>
    
     <!-- 会员管理启用-->
    <update id="start" parameterType="com.wooxun.geekdol.system.model.AppUser">
     UPDATE 
     s_app_user
     SET
     <if test="updId != null" >
        upd_id = #{updId,jdbcType=BIGINT},
      </if>
      <if test="updYmdhms != null" >
        upd_ymdhms = #{updYmdhms,jdbcType=TIMESTAMP},
      </if>
      <if test="updEac != null" >
        upd_eac = #{updEac,jdbcType=BIGINT},
      </if>
     status='0'
     where
     id = #{id,jdbcType=BIGINT}
     and upd_eac =  ( #{updEac,jdbcType=BIGINT} -1) 
    </update>
    
     <!-- 会员管理禁用-->
    <update id="stop" parameterType="com.wooxun.geekdol.system.model.AppUser">
     UPDATE 
     s_app_user
     SET
     <if test="updId != null" >
        upd_id = #{updId,jdbcType=BIGINT},
      </if>
      <if test="updYmdhms != null" >
        upd_ymdhms = #{updYmdhms,jdbcType=TIMESTAMP},
      </if>
      <if test="updEac != null" >
        upd_eac = #{updEac,jdbcType=BIGINT},
      </if>
     status='1'
     where
     id = #{id,jdbcType=BIGINT}
     and upd_eac =  ( #{updEac,jdbcType=BIGINT} -1) 
    </update>
    
     <!-- app接口验证该电话号码是否已经被注册 -->
  <select id="selectByMobile" resultType="java.lang.Integer" parameterType="java.lang.String" >
    select 
    count(*)
    from s_app_user
    where (moblie = #{moblie} or user_code=#{moblie})
    and del_flag ='0'
    and status='0'
  </select>
  
       <!-- app接口验证该电话号码是否存在 -->
  <select id="selectByMobileAll" resultType="java.lang.Integer" parameterType="java.lang.String" >
    select 
    count(*)
    from s_app_user
    where (moblie = #{moblie} or user_code=#{moblie})
    and del_flag ='0'
  </select>
  
  
  <!-- app登录接口返回 -->
  <sql id="app_Column_List" >
    id, nick_name, moblie, safekey, head_portrait, real_name, sex, birth_day, certificate_type, 
    certificate_number, email, address, staff_flag, staff_level,ins_id, ins_ymdhms, upd_id, upd_ymdhms, upd_eac, del_flag
  </sql>
  
    <!-- app接口登录-->
    <select id="login" resultType="java.lang.Integer" parameterType="com.wooxun.geekdol.system.model.AppUser" >
     select 
    count(*)
    from s_app_user
    where (moblie = #{moblie} or user_code=#{moblie})
    and pwd=#{pwd}
    and del_flag ='0'
    and status='0'
    </select>
    <!-- app接口登录  返回app登录接口-->
    <select id="select" resultMap="BaseResultMap" parameterType="java.lang.String">
     select 
    <include refid="Base_Column_List" />
    from s_app_user
    where (moblie = #{moblie} or user_code=#{moblie})
    and del_flag ='0'
    and status='0'
    </select>
    <!-- 根据safekey获取用户，用于判断app用户是否登录-->
    <select id="selectBySafekey" resultMap="BaseResultMap" parameterType="java.lang.String">
	    select 
	       <include refid="Base_Column_List" />
	    from s_app_user
	    where safekey = #{safekey}
	    and del_flag ='0'
	    and status='0'
    </select>
  
  <!-- 根据电话获取AppUser -->
  <select id="selectAppUserByMobile" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from s_app_user
    where moblie = #{moblie} and del_flag = '0' and status='0'
  </select>
  
    <!-- 根据uid查询出appuser  -->
    <select id="selectAppUserByUid" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from s_app_user
    where uid = #{uid,jdbcType=BIGINT} and del_flag = '0' and status ='0'
    </select>
  
    <!-- 根据uid 删除用户(逻辑删除)-->
    <update id="deleteAppUserByUserId" parameterType="com.wooxun.geekdol.system.model.AppUser">
     UPDATE 
     s_app_user
     SET
      <if test="updId != null" >
        upd_id = #{updId,jdbcType=BIGINT},
      </if>
      <if test="updYmdhms != null" >
        upd_ymdhms = #{updYmdhms,jdbcType=TIMESTAMP},
      </if>
      <if test="updEac != null" >
        upd_eac = #{updEac,jdbcType=BIGINT},
      </if>
     del_flag='1'
     where
     uid = #{id,jdbcType=BIGINT}
     and upd_eac =  ( #{updEac,jdbcType=BIGINT} -1) 
    </update>
    
    <!-- 根据uid 删除用户(物理删除)-->
    <delete id="deleteAppUserByUserId2" parameterType="java.lang.Long" >
    delete from s_app_user
    where uid = #{id,jdbcType=BIGINT}
   </delete>
  
</mapper>