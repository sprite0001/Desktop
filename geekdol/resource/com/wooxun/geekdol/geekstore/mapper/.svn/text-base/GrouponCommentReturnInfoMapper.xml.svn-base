<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wooxun.geekdol.geekstore.mapper.GrouponCommentReturnInfoMapper" >
  <resultMap id="BaseResultMap" type="com.wooxun.geekdol.geekstore.model.GrouponCommentReturnInfo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="comment_id" property="commentId" jdbcType="BIGINT" />
    <result column="comment_return_info" property="commentReturnInfo" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="opreater" property="opreater" jdbcType="BIGINT" />
    <result column="opreater_ip" property="opreaterIp" jdbcType="VARCHAR" />
    <result column="discuss_time" property="discussTime" jdbcType="TIMESTAMP" />
    <result column="ins_id" property="insId" jdbcType="BIGINT" />
    <result column="ins_ymdhms" property="insYmdhms" jdbcType="TIMESTAMP" />
    <result column="upd_id" property="updId" jdbcType="BIGINT" />
    <result column="upd_ymdhms" property="updYmdhms" jdbcType="TIMESTAMP" />
    <result column="upd_eac" property="updEac" jdbcType="BIGINT" />
    <result column="del_flag" property="delFlag" jdbcType="CHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, comment_id, comment_return_info, status, opreater, opreater_ip, discuss_time, 
    ins_id, ins_ymdhms, upd_id, upd_ymdhms, upd_eac, del_flag
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from j_groupon_comment_return_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from j_groupon_comment_return_info
    where id = #{id,jdbcType=BIGINT} and del_flag = '0'
  </delete>
  <insert id="insert" parameterType="com.wooxun.geekdol.geekstore.model.GrouponCommentReturnInfo" >
    insert into j_groupon_comment_return_info (id, comment_id, comment_return_info, 
      status, opreater, opreater_ip, 
      discuss_time, ins_id, ins_ymdhms, 
      upd_id, upd_ymdhms, upd_eac, 
      del_flag)
    values (#{id,jdbcType=BIGINT}, #{commentId,jdbcType=BIGINT}, #{commentReturnInfo,jdbcType=VARCHAR}, 
      #{status,jdbcType=CHAR}, #{opreater,jdbcType=BIGINT}, #{opreaterIp,jdbcType=VARCHAR}, 
      #{discussTime,jdbcType=TIMESTAMP}, #{insId,jdbcType=BIGINT}, #{insYmdhms,jdbcType=TIMESTAMP}, 
      #{updId,jdbcType=BIGINT}, #{updYmdhms,jdbcType=TIMESTAMP}, #{updEac,jdbcType=BIGINT}, 
      #{delFlag,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.wooxun.geekdol.geekstore.model.GrouponCommentReturnInfo" >
    insert into j_groupon_comment_return_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="commentId != null" >
        comment_id,
      </if>
      <if test="commentReturnInfo != null" >
        comment_return_info,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="opreater != null" >
        opreater,
      </if>
      <if test="opreaterIp != null" >
        opreater_ip,
      </if>
      <if test="discussTime != null" >
        discuss_time,
      </if>
      <if test="insId != null" >
        ins_id,
      </if>
      <if test="insYmdhms != null" >
        ins_ymdhms,
      </if>
      <if test="updId != null" >
        upd_id,
      </if>
      <if test="updYmdhms != null" >
        upd_ymdhms,
      </if>
      <if test="updEac != null" >
        upd_eac,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="commentId != null" >
        #{commentId,jdbcType=BIGINT},
      </if>
      <if test="commentReturnInfo != null" >
        #{commentReturnInfo,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="opreater != null" >
        #{opreater,jdbcType=BIGINT},
      </if>
      <if test="opreaterIp != null" >
        #{opreaterIp,jdbcType=VARCHAR},
      </if>
      <if test="discussTime != null" >
        #{discussTime,jdbcType=TIMESTAMP},
      </if>
      <if test="insId != null" >
        #{insId,jdbcType=BIGINT},
      </if>
      <if test="insYmdhms != null" >
        #{insYmdhms,jdbcType=TIMESTAMP},
      </if>
      <if test="updId != null" >
        #{updId,jdbcType=BIGINT},
      </if>
      <if test="updYmdhms != null" >
        #{updYmdhms,jdbcType=TIMESTAMP},
      </if>
      <if test="updEac != null" >
        #{updEac,jdbcType=BIGINT},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wooxun.geekdol.geekstore.model.GrouponCommentReturnInfo" >
    update j_groupon_comment_return_info
    <set >
      <if test="commentId != null" >
        comment_id = #{commentId,jdbcType=BIGINT},
      </if>
      <if test="commentReturnInfo != null" >
        comment_return_info = #{commentReturnInfo,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="opreater != null" >
        opreater = #{opreater,jdbcType=BIGINT},
      </if>
      <if test="opreaterIp != null" >
        opreater_ip = #{opreaterIp,jdbcType=VARCHAR},
      </if>
      <if test="discussTime != null" >
        discuss_time = #{discussTime,jdbcType=TIMESTAMP},
      </if>
      <if test="insId != null" >
        ins_id = #{insId,jdbcType=BIGINT},
      </if>
      <if test="insYmdhms != null" >
        ins_ymdhms = #{insYmdhms,jdbcType=TIMESTAMP},
      </if>
      <if test="updId != null" >
        upd_id = #{updId,jdbcType=BIGINT},
      </if>
      <if test="updYmdhms != null" >
        upd_ymdhms = #{updYmdhms,jdbcType=TIMESTAMP},
      </if>
      <if test="updEac != null" >
        upd_eac = #{updEac,jdbcType=BIGINT},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
      and upd_eac =  ( #{updEac,jdbcType=BIGINT} -1) 
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wooxun.geekdol.geekstore.model.GrouponCommentReturnInfo" >
    update j_groupon_comment_return_info
    set comment_id = #{commentId,jdbcType=BIGINT},
      comment_return_info = #{commentReturnInfo,jdbcType=VARCHAR},
      status = #{status,jdbcType=CHAR},
      opreater = #{opreater,jdbcType=BIGINT},
      opreater_ip = #{opreaterIp,jdbcType=VARCHAR},
      discuss_time = #{discussTime,jdbcType=TIMESTAMP},
      ins_id = #{insId,jdbcType=BIGINT},
      ins_ymdhms = #{insYmdhms,jdbcType=TIMESTAMP},
      upd_id = #{updId,jdbcType=BIGINT},
      upd_ymdhms = #{updYmdhms,jdbcType=TIMESTAMP},
      upd_eac = #{updEac,jdbcType=BIGINT},
      del_flag = #{delFlag,jdbcType=CHAR}
    where id = #{id,jdbcType=BIGINT}
      and upd_eac =  ( #{updEac,jdbcType=BIGINT} -1) 
  </update>
  <!-- 根据评论id查找回复内容 -->
  <select id="selectByCommentId" parameterType="java.lang.Long" resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List"/>
    from j_groupon_comment_return_info
    where comment_id = #{commentId,jdbcType=BIGINT} and del_flag = '0'
  </select>
  <!-- 获取回复数量、违规数量 -->
  <select id="getGrouponCommentReturnInfoCount" parameterType="com.wooxun.geekdol.geekstore.model.GrouponCommentReturnInfo" resultType="java.lang.Long">
  	select 
    count(id) from j_groupon_comment_return_info
    where comment_id = #{commentId,jdbcType=BIGINT} and del_flag = '0'
    <if test="status !=null and status.trim()!=''">
    	and status = #{status,jdbcType=CHAR}
    </if>
  </select>
  <!-- 组合条件查找评论的回复 -->
  <select id="queryByParams" parameterType="com.wooxun.geekdol.geekstore.vo.GrouponCommentReturnInfoVo" resultType="com.wooxun.geekdol.geekstore.vo.GrouponCommentReturnInfoVo">
  	select ri.id,
    ri.comment_id as commentId, ri.comment_return_info as commentReturnInfo, ri.status, 
    ri.opreater, ri.opreater_ip as opreaterIp, DATE_FORMAT(ri.discuss_time,"%Y-%m-%d %T") as discussTimeStr,appUser.nick_name as nickName
    from j_groupon_comment_return_info ri,s_app_user appUser
    <where>
    	<if test="nickName != null and nickName.trim()!=''">
    		and appUser.nick_name LIKE CONCAT(CONCAT('%', #{nickName}),'%')
    	</if>
    	<if test="commentReturnInfo != null and commentReturnInfo.trim()!=''">
    		and ri.comment_return_info LIKE CONCAT(CONCAT('%', #{commentReturnInfo}),'%')
    	</if>
    	<if test="status != null and status.trim()!=''">
    		and ri.status = #{status,jdbcType=CHAR}
    	</if>
    	and ri.opreater = appUser.id and appUser.del_flag = '0'
    	and ri.comment_id = #{commentId,jdbcType=BIGINT} and ri.del_flag = '0'
    </where>
  </select>
</mapper>