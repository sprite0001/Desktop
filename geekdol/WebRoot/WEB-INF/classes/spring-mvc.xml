<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
	    http://www.springframework.org/schema/mvc 
	    http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd">
	
	<!-- 自动扫描controller包下的所有类，使其认为spring mvc的控制器 -->
	<context:component-scan base-package="com.wooxun.geekdol.*.controller" />


	
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg value="UTF-8" />
			</bean>
		</mvc:message-converters>	
	</mvc:annotation-driven>
	
	 <!-- 多行编辑 -->
	<bean id="mappingJackson2HttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
                <value>text/json;charset=UTF-8</value>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
	</bean>
	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" >
     <property name="messageConverters">  
            <list>  
                <ref bean="mappingJackson2HttpMessageConverter" />  
            </list>  
        </property>  
    </bean> 
    
	 
	 
	
	<!-- 容器默认的DefaultServletHandler处理 所有静态内容与无RequestMapping处理的URL-->
	<mvc:default-servlet-handler/>

	<!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
	
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
		<property name="maxUploadSize">
			<value>325058560</value><!-- 上传文件大小限制为31M，31*1024*1024 -->
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
		<property name="resolveLazily" value="true"/> 
	</bean>
	
	<!-- 定义无Controller的path<->view直接映射 -->
	<mvc:view-controller path="/" view-name="redirect:/main/index"/>
	
	<!-- 全局异常配置 start -->  
    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  
		<property name="exceptionMappings">  
            <props>
				<prop key="org.apache.shiro.authz.UnauthorizedException">error/403</prop>      
                <prop key="java.lang.Throwable">error/500</prop>
            </props>  
        </property>  
        <property name="statusCodes">  
            <props>  
                <prop key="500">500</prop>  
                <prop key="404">404</prop>
                <prop key="403">403</prop>  
            </props>  
        </property>  
        <!-- 设置日志输出级别，不定义则默认不输出警告等错误日志信息 -->  
        <property name="warnLogCategory" value="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver"/>  
        <!-- 默认错误页面，当找不到上面mappings中指定的异常对应视图时，使用本默认配置 -->  
        <property name="defaultErrorView" value="error/500"/>  
        <!-- 默认HTTP状态码 ，返回错误默认设置的状态码-->  
        <property name="defaultStatusCode" value="200"/>  
    </bean>  
    <!-- 全局异常配置 end -->
	
	<!-- 支持 Shiro对Controller的方法级AOP安全控制 begin-->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
    	<property name="securityManager" ref="securityManager"/>
	</bean>
	<!-- 支持 Shiro对Controller的方法级AOP安全控制 end  -->
	
	<bean id="viewResolver1" class="org.springframework.web.servlet.view.XmlViewResolver">
  		<property name="order" value="1"/>
  		<property name="location" value="classpath:views.xml"/>
	</bean>
	

</beans>